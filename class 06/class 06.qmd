---
title: "class 06"
author: "Aaron Liu (PID:A13908620)"
format: pdf
---
##All About Functions: 3 essential things in function: 
1. Name
2. Argument
3. The body
 
```{r}
# Example input vectors to start with
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)

#Average 
mean(student2, na.rm=TRUE)
?mean
```
Drop the lowest score
```{r}
min(student1)
?min
mean(student1 [-which.min(student1)])

```
Modify it for student 2
```{r}
mean(student2 [-which.min(student2)], na.rm=TRUE)
x<-student2
mean(x[-which.min(x)], na.rm=TRUE)
```

Modify it for student 3, mask NA for 0
```{r}
#Mask NA for 0
student3[is.na(student3)]<-0
#Drop the min and find the average. 
mean(student3[-which.min(student3)], na.rm=TRUE)
```

##Grade Function

```{r}
grade<-function(x, na.rm=TRUE){
  #The body of the function
  x[is.na(x)]<-0
  return(mean(x[-which.min(x)], na.rm=na.rm))
}
```

Test
```{r}
grade(student3)
```

>1 
Q1. Write a function grade() to determine an overall grade from a vector of student homework
assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an
NA value) this can be used as a score to be potentially dropped. Your final function should be
adquately explained with code comments and be able to work on an example class gradebook
such as this one in CSV format: “https://tinyurl.com/gradeinput” [3pts]

```{r}
gradebook<-read.csv("https://tinyurl.com/gradeinput", row.names=1)
gradebook
?apply
```
Using apply function

```{r}
apply(gradebook, 1, grade)
```

>Q2
Using your grade() function and the supplied gradebook, Who is the top scoring student
overall in the gradebook? [3pts]

```{r}
ans<-apply(gradebook, 1, grade)
which.max(ans)
```

>Q3. From your analysis of the gradebook, which homework was toughest on students (i.e. obtained
the lowest scores overall? [2pts]

```{r}
which.min(apply(gradebook, 2, mean, na.rm=TRUE))

```

mask the NA values to 0

```{r}
mask<-gradebook
mask[is.na(mask)]<-0
which.min(apply(mask,2,mean))
```
```{r}
which.min(apply(mask,2,sum))
```

>Optional Extension: From your analysis of the gradebook, which homework was most
predictive of overall score (i.e. highest correlation with average grade score)? [1pt]

```{r}
ans
cor(mask$hw5, ans)
#Now apply it every homework. 
which.max(apply(mask, 2, cor, y=ans))
```

